# Main server configuration. See below for redirects.
server {
    listen       _PORT_ ssl;
    server_name  localhost  montagu.vaccineimpact.org;

    ssl_certificate      /etc/montagu/proxy/certificate.pem;
    ssl_certificate_key  /etc/montagu/proxy/ssl_key.pem;

    # SSL settings as recommended by this blog: https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam /etc/montagu/proxy/dhparam.pem;

    root /usr/share/nginx/html;

    # Serve up a static page for confirming the server is running
    location / {
        try_files /index.html =404;
        expires -1;
        add_header Cache-Control "public";
    }
    # Resources for static page
    location /resources/ {
    }

    # Pass through to different containers based on url prefix.
    location /api/ {
        proxy_pass http://api:8080/;
        proxy_redirect default;

        # proxy_buffering is off, otherwise nginx downloads
        # the full request before passing it on: This is bad for large files.
        proxy_buffering off;
        proxy_request_buffering off;

        proxy_send_timeout 200s;
        proxy_read_timeout 200s;
    }
    location /reports/api/ {
        proxy_pass http://reporting_api:8081/;
        proxy_redirect default;

        # proxy_buffering is off, otherwise nginx downloads
        # the full request before passing it on: This is bad for large files.
        proxy_buffering off;
    }

    location /admin/ {
        proxy_pass http://admin/;
    }
    location /contribution/ {
        proxy_pass http://contrib/;
    }
    location /reports/ {
        proxy_pass http://report/;
    }

    # https://support.rstudio.com/hc/en-us/articles/213733868-Running-Shiny-Server-with-a-Proxy
    location /shiny/ {
        rewrite ^/shiny/(.*)$ /$1 break;

        proxy_pass http://shiny_proxy;
        proxy_redirect http://shiny_proxy/ $scheme://$host/shiny/;
        proxy_http_version 1.1;

        # Here we set the Upgrade and Connection headers to allow a protocol switch from HTTP/1.1 to Websocket
        # We have to set these explicitly because they are 'hop-by-hop' headers which are not passed
        # from client to proxied server
        # See nginx.conf for the setup of $http_upgrade and $http_connection
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 20d;
        proxy_buffering off;

        # These headers are required because we are proxying https to http
        # Shiny can only run over http
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }

}

# Redirect all http requests to the SSL endpoint and the correct domain name
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    location /basic_status {
        stub_status;
        allow 129.31.26.30/32;
        allow 129.31.24.0/23;
        allow 192.168.0.0/16;
        deny all;
    }

    location / {
        return 301 https://_HOST_$request_uri;
    }
}
