# Main server configuration. See below for redirects.
server {
    listen       _PORT_ ssl;
    server_name  localhost  montagu.vaccineimpact.org;

    ssl_certificate      /etc/montagu/proxy/certificate.pem;
    ssl_certificate_key  /etc/montagu/proxy/ssl_key.pem;

    root /usr/share/nginx/html;

    # Serve up a static page for confirming the server is running
    location / {
        try_files /index.html =404;
        expires -1;
        add_header Cache-Control "public";
    }
    # Resources for static page
    location /resources/ {
    }

    # Pass through to different containers based on url prefix. 
    location /api/ {
        proxy_pass http://api:8080/;
        proxy_redirect default;

        # proxy_buffering is off, otherwise nginx downloads 
        # the full request before passing it on: This is bad for large files.
        proxy_buffering off;
        proxy_request_buffering off;

        proxy_send_timeout 200s;
        proxy_read_timeout 200s;

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
    }

    location /reports/api/ {
        proxy_pass http://reporting_api:8081/;
        proxy_redirect default;

        # proxy_buffering is off, otherwise nginx downloads 
        # the full request before passing it on: This is bad for large files.
        proxy_buffering off;
    }

    location /admin/ {
        proxy_pass http://admin/;
    }
    location /contribution/ {
        proxy_pass http://contrib/;
    }
    location /reports/ {
        proxy_pass http://report/;
    }

    location /shiny/ {
        rewrite ^/shiny/(.*)$ /$1 break;
        # So this is the bit that needs work:
        #
        # changed localhost:3838 to shiny:3838
        # then again to shiny_proxy
        proxy_pass http://shiny_proxy;
        proxy_redirect http://shiny_proxy/ $scheme://$host/shiny/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 20d;
        proxy_buffering off;

        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }
}

# Redirect all http requests to the SSL endpoint and the correct domain name
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://_HOST_$request_uri;
}
