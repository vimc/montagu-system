#!/usr/bin/env python3

import argparse
import os
import subprocess

def psql(sql):
    args = ['psql', '-U', 'vimc', '-d', 'montagu', '-c', sql]
    subprocess.run(args, check = True)

# It may be worthwhile setting the option 'synchronous_commit' to
# 'on' by adding the line
#
#   WITH (synchronous_commit = on)
#
# at the end of the CREATE SUBSCRIPTION block here.  We can also
# change this later with ALTER SUBSCRIPTION.
#
# https://www.postgresql.org/docs/10/static/sql-createsubscription.html
# https://www.postgresql.org/docs/10/static/runtime-config-wal.html#guc-synchronous-commit
def subscribe_start(d):
    sql = """CREATE SUBSCRIPTION {subscription_name}
    CONNECTION 'dbname=montagu host={host} user=vimc password={password}'
    PUBLICATION {subscription_name};"""
    psql(sql.format(**d))

def subscribe_stop(d):
    sql = "DROP SUBSCRIPTION {subscription_name}"
    psql(sql.format(**d))

def publish_start(d):
    sql = """CREATE PUBLICATION {subscription_name}
    FOR TABLE burden_estimate_set, country, burden_outcome;"""
    psql(sql.format(**d))

def publish_stop(d):
    sql = "DROP PUBLICATION {subscription_name};"
    psql(sql.format(**d))

def run():
    parser = argparse.ArgumentParser(description="Start subscription")
    parser.add_argument('--host', type = str, default = 'db')
    parser.add_argument('--password', type = str, default = 'changeme')
    parser.add_argument('direction', choices = ['publish', 'subscribe'])
    parser.add_argument('action', choices = ['start', 'stop'])
    d = vars(parser.parse_args())
    d['subscription_name'] = 'sync_burden_estimate_set'
    if d['direction'] == 'publish':
        if d['action'] == 'start':
            publish_start(d)
        else:
            publish_stop(d)
    else:
        if d['action'] == 'start':
            subscribe_start(d)
        else:
            subscribe_stop(d)

if __name__ == "__main__":
    run()
